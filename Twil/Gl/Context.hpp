#pragma once

#include "ContextFwd.hpp"

#include "Platform/SymbolLoaderFwd.hpp"

#include <GL3/gl3.h>

namespace Twil {
namespace Gl {
namespace Context {

void initialize(Platform::SymbolLoaderT const &);

}
}
}

// We define our functions in a namespace and immediately use it so we dont conflict with libGL
namespace Twil {
namespace Gl {
namespace Procs {

void glCullFace(GLenum);
void glFrontFace(GLenum);
void glHint(GLenum, GLenum);
void glLineWidth(GLfloat);
void glPointSize(GLfloat);
void glPolygonMode(GLenum, GLenum);
void glScissor(GLint, GLint, GLsizei, GLsizei);
void glTexParameterf(GLenum, GLenum, GLfloat);
void glTexParameterfv(GLenum, GLenum, GLfloat const *);
void glTexParameteri(GLenum, GLenum, GLint);
void glTexParameteriv(GLenum, GLenum, GLint const *);
void glTexImage1D(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid const *);
void glTexImage2D(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid const *);
void glDrawBuffer(GLenum);
void glClear(GLbitfield);
void glClearColor(GLclampf, GLclampf, GLclampf, GLclampf);
void glClearStencil(GLint);
void glClearDepth(GLclampd);
void glStencilMask(GLuint);
void glColorMask(GLboolean, GLboolean, GLboolean, GLboolean);
void glDepthMask(GLboolean);
void glDisable(GLenum);
void glEnable(GLenum);
void glFinish(void);
void glFlush(void);
void glBlendFunc(GLenum, GLenum);
void glLogicOp(GLenum);
void glStencilFunc(GLenum, GLint, GLuint);
void glStencilOp(GLenum, GLenum, GLenum);
void glDepthFunc(GLenum);
void glPixelStoref(GLenum, GLfloat);
void glPixelStorei(GLenum, GLint);
void glReadBuffer(GLenum);
void glReadPixels(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid *);
void glGetBooleanv(GLenum, GLboolean *);
void glGetDoublev(GLenum, GLdouble *);
GLenum glGetError(void);
void glGetFloatv(GLenum, GLfloat *);
void glGetIntegerv(GLenum, GLint *);
GLubyte const * glGetString(GLenum);
void glGetTexImage(GLenum, GLint, GLenum, GLenum, GLvoid *);
void glGetTexParameterfv(GLenum, GLenum, GLfloat *);
void glGetTexParameteriv(GLenum, GLenum, GLint *);
void glGetTexLevelParameterfv(GLenum, GLint, GLenum, GLfloat *);
void glGetTexLevelParameteriv(GLenum, GLint, GLenum, GLint *);
GLboolean glIsEnabled(GLenum);
void glDepthRange(GLclampd, GLclampd);
void glViewport(GLint, GLint, GLsizei, GLsizei);
void glDrawArrays(GLenum, GLint, GLsizei);
void glDrawElements(GLenum, GLsizei, GLenum, GLvoid const *);
void glGetPointerv(GLenum, GLvoid * *);
void glPolygonOffset(GLfloat, GLfloat);
void glCopyTexImage1D(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
void glCopyTexImage2D(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
void glCopyTexSubImage1D(GLenum, GLint, GLint, GLint, GLint, GLsizei);
void glCopyTexSubImage2D(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
void glTexSubImage1D(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid const *);
void glTexSubImage2D(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid const *);
void glBindTexture(GLenum, GLuint);
void glDeleteTextures(GLsizei, GLuint const *);
void glGenTextures(GLsizei, GLuint *);
GLboolean glIsTexture(GLuint);
void glBlendColor(GLclampf, GLclampf, GLclampf, GLclampf);
void glBlendEquation(GLenum);
void glDrawRangeElements(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid const *);
void glTexImage3D(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid const *);
void glTexSubImage3D(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid const *);
void glCopyTexSubImage3D(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
void glActiveTexture(GLenum);
void glSampleCoverage(GLclampf, GLboolean);
void glCompressedTexImage3D(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid const *);
void glCompressedTexImage2D(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid const *);
void glCompressedTexImage1D(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid const *);
void glCompressedTexSubImage3D(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid const *);
void glCompressedTexSubImage2D(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid const *);
void glCompressedTexSubImage1D(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid const *);
void glGetCompressedTexImage(GLenum, GLint, GLvoid *);
void glBlendFuncSeparate(GLenum, GLenum, GLenum, GLenum);
void glMultiDrawArrays(GLenum, GLint const *, GLsizei const *, GLsizei);
void glMultiDrawElements(GLenum, GLsizei const *, GLenum, GLvoid const * *, GLsizei);
void glPointParameterf(GLenum, GLfloat);
void glPointParameterfv(GLenum, GLfloat const *);
void glPointParameteri(GLenum, GLint);
void glPointParameteriv(GLenum, GLint const *);
void glGenQueries(GLsizei, GLuint *);
void glDeleteQueries(GLsizei, GLuint const *);
GLboolean glIsQuery(GLuint);
void glBeginQuery(GLenum, GLuint);
void glEndQuery(GLenum);
void glGetQueryiv(GLenum, GLenum, GLint *);
void glGetQueryObjectiv(GLuint, GLenum, GLint *);
void glGetQueryObjectuiv(GLuint, GLenum, GLuint *);
void glVertexAttribP1ui(GLuint, GLenum, GLboolean, GLuint);
void glVertexAttribP1uiv(GLuint, GLenum, GLboolean, GLuint const *);
void glVertexAttribP2ui(GLuint, GLenum, GLboolean, GLuint);
void glVertexAttribP2uiv(GLuint, GLenum, GLboolean, GLuint const *);
void glVertexAttribP3ui(GLuint, GLenum, GLboolean, GLuint);
void glVertexAttribP3uiv(GLuint, GLenum, GLboolean, GLuint const *);
void glVertexAttribP4ui(GLuint, GLenum, GLboolean, GLuint);
void glVertexAttribP4uiv(GLuint, GLenum, GLboolean, GLuint const *);
void glBindBuffer(GLenum, GLuint);
void glDeleteBuffers(GLsizei, GLuint const *);
void glGenBuffers(GLsizei, GLuint *);
GLboolean glIsBuffer(GLuint);
void glBufferData(GLenum, GLsizeiptr, GLvoid const *, GLenum);
void glBufferSubData(GLenum, GLintptr, GLsizeiptr, GLvoid const *);
void glGetBufferSubData(GLenum, GLintptr, GLsizeiptr, GLvoid *);
GLvoid * glMapBuffer(GLenum, GLenum);
GLboolean glUnmapBuffer(GLenum);
void glGetBufferParameteriv(GLenum, GLenum, GLint *);
void glGetBufferPointerv(GLenum, GLenum, GLvoid * *);
void glBlendEquationSeparate(GLenum, GLenum);
void glDrawBuffers(GLsizei, GLenum const *);
void glStencilOpSeparate(GLenum, GLenum, GLenum, GLenum);
void glStencilFuncSeparate(GLenum, GLenum, GLint, GLuint);
void glStencilMaskSeparate(GLenum, GLuint);
void glAttachShader(GLuint, GLuint);
void glBindAttribLocation(GLuint, GLuint, GLchar const *);
void glCompileShader(GLuint);
GLuint glCreateProgram(void);
GLuint glCreateShader(GLenum);
void glDeleteProgram(GLuint);
void glDeleteShader(GLuint);
void glDetachShader(GLuint, GLuint);
void glDisableVertexAttribArray(GLuint);
void glEnableVertexAttribArray(GLuint);
void glGetActiveAttrib(GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *);
void glGetActiveUniform(GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *);
void glGetAttachedShaders(GLuint, GLsizei, GLsizei *, GLuint *);
GLint glGetAttribLocation(GLuint, GLchar const *);
void glGetProgramiv(GLuint, GLenum, GLint *);
void glGetProgramInfoLog(GLuint, GLsizei, GLsizei *, GLchar *);
void glGetShaderiv(GLuint, GLenum, GLint *);
void glGetShaderInfoLog(GLuint, GLsizei, GLsizei *, GLchar *);
void glGetShaderSource(GLuint, GLsizei, GLsizei *, GLchar *);
GLint glGetUniformLocation(GLuint, GLchar const *);
void glGetUniformfv(GLuint, GLint, GLfloat *);
void glGetUniformiv(GLuint, GLint, GLint *);
void glGetVertexAttribdv(GLuint, GLenum, GLdouble *);
void glGetVertexAttribfv(GLuint, GLenum, GLfloat *);
void glGetVertexAttribiv(GLuint, GLenum, GLint *);
void glGetVertexAttribPointerv(GLuint, GLenum, GLvoid * *);
GLboolean glIsProgram(GLuint);
GLboolean glIsShader(GLuint);
void glLinkProgram(GLuint);
void glShaderSource(GLuint, GLsizei, GLchar const * *, GLint const *);
void glUseProgram(GLuint);
void glUniform1f(GLint, GLfloat);
void glUniform2f(GLint, GLfloat, GLfloat);
void glUniform3f(GLint, GLfloat, GLfloat, GLfloat);
void glUniform4f(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
void glUniform1i(GLint, GLint);
void glUniform2i(GLint, GLint, GLint);
void glUniform3i(GLint, GLint, GLint, GLint);
void glUniform4i(GLint, GLint, GLint, GLint, GLint);
void glUniform1fv(GLint, GLsizei, GLfloat const *);
void glUniform2fv(GLint, GLsizei, GLfloat const *);
void glUniform3fv(GLint, GLsizei, GLfloat const *);
void glUniform4fv(GLint, GLsizei, GLfloat const *);
void glUniform1iv(GLint, GLsizei, GLint const *);
void glUniform2iv(GLint, GLsizei, GLint const *);
void glUniform3iv(GLint, GLsizei, GLint const *);
void glUniform4iv(GLint, GLsizei, GLint const *);
void glUniformMatrix2fv(GLint, GLsizei, GLboolean, GLfloat const *);
void glUniformMatrix3fv(GLint, GLsizei, GLboolean, GLfloat const *);
void glUniformMatrix4fv(GLint, GLsizei, GLboolean, GLfloat const *);
void glValidateProgram(GLuint);
void glVertexAttrib1d(GLuint, GLdouble);
void glVertexAttrib1dv(GLuint, GLdouble const *);
void glVertexAttrib1f(GLuint, GLfloat);
void glVertexAttrib1fv(GLuint, GLfloat const *);
void glVertexAttrib1s(GLuint, GLshort);
void glVertexAttrib1sv(GLuint, GLshort const *);
void glVertexAttrib2d(GLuint, GLdouble, GLdouble);
void glVertexAttrib2dv(GLuint, GLdouble const *);
void glVertexAttrib2f(GLuint, GLfloat, GLfloat);
void glVertexAttrib2fv(GLuint, GLfloat const *);
void glVertexAttrib2s(GLuint, GLshort, GLshort);
void glVertexAttrib2sv(GLuint, GLshort const *);
void glVertexAttrib3d(GLuint, GLdouble, GLdouble, GLdouble);
void glVertexAttrib3dv(GLuint, GLdouble const *);
void glVertexAttrib3f(GLuint, GLfloat, GLfloat, GLfloat);
void glVertexAttrib3fv(GLuint, GLfloat const *);
void glVertexAttrib3s(GLuint, GLshort, GLshort, GLshort);
void glVertexAttrib3sv(GLuint, GLshort const *);
void glVertexAttrib4Nbv(GLuint, GLbyte const *);
void glVertexAttrib4Niv(GLuint, GLint const *);
void glVertexAttrib4Nsv(GLuint, GLshort const *);
void glVertexAttrib4Nub(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
void glVertexAttrib4Nubv(GLuint, GLubyte const *);
void glVertexAttrib4Nuiv(GLuint, GLuint const *);
void glVertexAttrib4Nusv(GLuint, GLushort const *);
void glVertexAttrib4bv(GLuint, GLbyte const *);
void glVertexAttrib4d(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
void glVertexAttrib4dv(GLuint, GLdouble const *);
void glVertexAttrib4f(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
void glVertexAttrib4fv(GLuint, GLfloat const *);
void glVertexAttrib4iv(GLuint, GLint const *);
void glVertexAttrib4s(GLuint, GLshort, GLshort, GLshort, GLshort);
void glVertexAttrib4sv(GLuint, GLshort const *);
void glVertexAttrib4ubv(GLuint, GLubyte const *);
void glVertexAttrib4uiv(GLuint, GLuint const *);
void glVertexAttrib4usv(GLuint, GLushort const *);
void glVertexAttribPointer(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid const *);
void glUniformMatrix2x3fv(GLint, GLsizei, GLboolean, GLfloat const *);
void glUniformMatrix3x2fv(GLint, GLsizei, GLboolean, GLfloat const *);
void glUniformMatrix2x4fv(GLint, GLsizei, GLboolean, GLfloat const *);
void glUniformMatrix4x2fv(GLint, GLsizei, GLboolean, GLfloat const *);
void glUniformMatrix3x4fv(GLint, GLsizei, GLboolean, GLfloat const *);
void glUniformMatrix4x3fv(GLint, GLsizei, GLboolean, GLfloat const *);
void glColorMaski(GLuint, GLboolean, GLboolean, GLboolean, GLboolean);
void glGetBooleani_v(GLenum, GLuint, GLboolean *);
void glGetIntegeri_v(GLenum, GLuint, GLint *);
void glEnablei(GLenum, GLuint);
void glDisablei(GLenum, GLuint);
GLboolean glIsEnabledi(GLenum, GLuint);
void glBeginTransformFeedback(GLenum);
void glEndTransformFeedback(void);
void glBindBufferRange(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
void glBindBufferBase(GLenum, GLuint, GLuint);
void glTransformFeedbackVaryings(GLuint, GLsizei, GLchar const * *, GLenum);
void glGetTransformFeedbackVarying(GLuint, GLuint, GLsizei, GLsizei *, GLsizei *, GLenum *, GLchar *);
void glClampColor(GLenum, GLenum);
void glBeginConditionalRender(GLuint, GLenum);
void glEndConditionalRender(void);
void glVertexAttribIPointer(GLuint, GLint, GLenum, GLsizei, GLvoid const *);
void glGetVertexAttribIiv(GLuint, GLenum, GLint *);
void glGetVertexAttribIuiv(GLuint, GLenum, GLuint *);
void glVertexAttribI1i(GLuint, GLint);
void glVertexAttribI2i(GLuint, GLint, GLint);
void glVertexAttribI3i(GLuint, GLint, GLint, GLint);
void glVertexAttribI4i(GLuint, GLint, GLint, GLint, GLint);
void glVertexAttribI1ui(GLuint, GLuint);
void glVertexAttribI2ui(GLuint, GLuint, GLuint);
void glVertexAttribI3ui(GLuint, GLuint, GLuint, GLuint);
void glVertexAttribI4ui(GLuint, GLuint, GLuint, GLuint, GLuint);
void glVertexAttribI1iv(GLuint, GLint const *);
void glVertexAttribI2iv(GLuint, GLint const *);
void glVertexAttribI3iv(GLuint, GLint const *);
void glVertexAttribI4iv(GLuint, GLint const *);
void glVertexAttribI1uiv(GLuint, GLuint const *);
void glVertexAttribI2uiv(GLuint, GLuint const *);
void glVertexAttribI3uiv(GLuint, GLuint const *);
void glVertexAttribI4uiv(GLuint, GLuint const *);
void glVertexAttribI4bv(GLuint, GLbyte const *);
void glVertexAttribI4sv(GLuint, GLshort const *);
void glVertexAttribI4ubv(GLuint, GLubyte const *);
void glVertexAttribI4usv(GLuint, GLushort const *);
void glGetUniformuiv(GLuint, GLint, GLuint *);
void glBindFragDataLocation(GLuint, GLuint, GLchar const *);
GLint glGetFragDataLocation(GLuint, GLchar const *);
void glUniform1ui(GLint, GLuint);
void glUniform2ui(GLint, GLuint, GLuint);
void glUniform3ui(GLint, GLuint, GLuint, GLuint);
void glUniform4ui(GLint, GLuint, GLuint, GLuint, GLuint);
void glUniform1uiv(GLint, GLsizei, GLuint const *);
void glUniform2uiv(GLint, GLsizei, GLuint const *);
void glUniform3uiv(GLint, GLsizei, GLuint const *);
void glUniform4uiv(GLint, GLsizei, GLuint const *);
void glTexParameterIiv(GLenum, GLenum, GLint const *);
void glTexParameterIuiv(GLenum, GLenum, GLuint const *);
void glGetTexParameterIiv(GLenum, GLenum, GLint *);
void glGetTexParameterIuiv(GLenum, GLenum, GLuint *);
void glClearBufferiv(GLenum, GLint, GLint const *);
void glClearBufferuiv(GLenum, GLint, GLuint const *);
void glClearBufferfv(GLenum, GLint, GLfloat const *);
void glClearBufferfi(GLenum, GLint, GLfloat, GLint);
GLubyte const * glGetStringi(GLenum, GLuint);
void glDrawArraysInstanced(GLenum, GLint, GLsizei, GLsizei);
void glDrawElementsInstanced(GLenum, GLsizei, GLenum, GLvoid const *, GLsizei);
void glTexBuffer(GLenum, GLenum, GLuint);
void glPrimitiveRestartIndex(GLuint);
void glGetInteger64i_v(GLenum, GLuint, GLint64 *);
void glGetBufferParameteri64v(GLenum, GLenum, GLint64 *);
void glFramebufferTexture(GLenum, GLenum, GLuint, GLint);
void glVertexAttribDivisor(GLuint, GLuint);
void glMinSampleShading(GLclampf);
void glBlendEquationi(GLuint, GLenum);
void glBlendEquationSeparatei(GLuint, GLenum, GLenum);
void glBlendFunci(GLuint, GLenum, GLenum);
void glBlendFuncSeparatei(GLuint, GLenum, GLenum, GLenum, GLenum);
GLboolean glIsRenderbuffer(GLuint);
void glBindRenderbuffer(GLenum, GLuint);
void glDeleteRenderbuffers(GLsizei, GLuint const *);
void glGenRenderbuffers(GLsizei, GLuint *);
void glRenderbufferStorage(GLenum, GLenum, GLsizei, GLsizei);
void glGetRenderbufferParameteriv(GLenum, GLenum, GLint *);
GLboolean glIsFramebuffer(GLuint);
void glBindFramebuffer(GLenum, GLuint);
void glDeleteFramebuffers(GLsizei, GLuint const *);
void glGenFramebuffers(GLsizei, GLuint *);
GLenum glCheckFramebufferStatus(GLenum);
void glFramebufferTexture1D(GLenum, GLenum, GLenum, GLuint, GLint);
void glFramebufferTexture2D(GLenum, GLenum, GLenum, GLuint, GLint);
void glFramebufferTexture3D(GLenum, GLenum, GLenum, GLuint, GLint, GLint);
void glFramebufferRenderbuffer(GLenum, GLenum, GLenum, GLuint);
void glGetFramebufferAttachmentParameteriv(GLenum, GLenum, GLenum, GLint *);
void glGenerateMipmap(GLenum);
void glBlitFramebuffer(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
void glRenderbufferStorageMultisample(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
void glFramebufferTextureLayer(GLenum, GLenum, GLuint, GLint, GLint);
GLvoid * glMapBufferRange(GLenum, GLintptr, GLsizeiptr, GLbitfield);
void glFlushMappedBufferRange(GLenum, GLintptr, GLsizeiptr);
void glBindVertexArray(GLuint);
void glDeleteVertexArrays(GLsizei, GLuint const *);
void glGenVertexArrays(GLsizei, GLuint *);
GLboolean glIsVertexArray(GLuint);
void glGetUniformIndices(GLuint, GLsizei, GLchar const * *, GLuint *);
void glGetActiveUniformsiv(GLuint, GLsizei, GLuint const *, GLenum, GLint *);
void glGetActiveUniformName(GLuint, GLuint, GLsizei, GLsizei *, GLchar *);
GLuint glGetUniformBlockIndex(GLuint, GLchar const *);
void glGetActiveUniformBlockiv(GLuint, GLuint, GLenum, GLint *);
void glGetActiveUniformBlockName(GLuint, GLuint, GLsizei, GLsizei *, GLchar *);
void glUniformBlockBinding(GLuint, GLuint, GLuint);
void glCopyBufferSubData(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr);
void glDrawElementsBaseVertex(GLenum, GLsizei, GLenum, GLvoid const *, GLint);
void glDrawRangeElementsBaseVertex(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid const *, GLint);
void glDrawElementsInstancedBaseVertex(GLenum, GLsizei, GLenum, GLvoid const *, GLsizei, GLint);
void glMultiDrawElementsBaseVertex(GLenum, GLsizei const *, GLenum, GLvoid const * *, GLsizei, GLint const *);
void glProvokingVertex(GLenum);
GLsync glFenceSync(GLenum, GLbitfield);
GLboolean glIsSync(GLsync);
void glDeleteSync(GLsync);
GLenum glClientWaitSync(GLsync, GLbitfield, GLuint64);
void glWaitSync(GLsync, GLbitfield, GLuint64);
void glGetInteger64v(GLenum, GLint64 *);
void glGetSynciv(GLsync, GLenum, GLsizei, GLsizei *, GLint *);
void glTexImage2DMultisample(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean);
void glTexImage3DMultisample(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean);
void glGetMultisamplefv(GLenum, GLuint, GLfloat *);
void glSampleMaski(GLuint, GLbitfield);
void glBlendEquationiARB(GLuint, GLenum);
void glBlendEquationSeparateiARB(GLuint, GLenum, GLenum);
void glBlendFunciARB(GLuint, GLenum, GLenum);
void glBlendFuncSeparateiARB(GLuint, GLenum, GLenum, GLenum, GLenum);
void glMinSampleShadingARB(GLclampf);
void glNamedStringARB(GLenum, GLint, GLchar const *, GLint, GLchar const *);
void glDeleteNamedStringARB(GLint, GLchar const *);
void glCompileShaderIncludeARB(GLuint, GLsizei, GLchar const * *, GLint const *);
GLboolean glIsNamedStringARB(GLint, GLchar const *);
void glGetNamedStringARB(GLint, GLchar const *, GLsizei, GLint *, GLchar *);
void glGetNamedStringivARB(GLint, GLchar const *, GLenum, GLint *);
void glBindFragDataLocationIndexed(GLuint, GLuint, GLuint, GLchar const *);
GLint glGetFragDataIndex(GLuint, GLchar const *);
void glGenSamplers(GLsizei, GLuint *);
void glDeleteSamplers(GLsizei, GLuint const *);
GLboolean glIsSampler(GLuint);
void glBindSampler(GLuint, GLuint);
void glSamplerParameteri(GLuint, GLenum, GLint);
void glSamplerParameteriv(GLuint, GLenum, GLint const *);
void glSamplerParameterf(GLuint, GLenum, GLfloat);
void glSamplerParameterfv(GLuint, GLenum, GLfloat const *);
void glSamplerParameterIiv(GLuint, GLenum, GLint const *);
void glSamplerParameterIuiv(GLuint, GLenum, GLuint const *);
void glGetSamplerParameteriv(GLuint, GLenum, GLint *);
void glGetSamplerParameterIiv(GLuint, GLenum, GLint *);
void glGetSamplerParameterfv(GLuint, GLenum, GLfloat *);
void glGetSamplerParameterIuiv(GLuint, GLenum, GLuint *);
void glQueryCounter(GLuint, GLenum);
void glGetQueryObjecti64v(GLuint, GLenum, GLint64 *);
void glGetQueryObjectui64v(GLuint, GLenum, GLuint64 *);
void glDrawArraysIndirect(GLenum, GLvoid const *);
void glDrawElementsIndirect(GLenum, GLenum, GLvoid const *);
void glUniform1d(GLint, GLdouble);
void glUniform2d(GLint, GLdouble, GLdouble);
void glUniform3d(GLint, GLdouble, GLdouble, GLdouble);
void glUniform4d(GLint, GLdouble, GLdouble, GLdouble, GLdouble);
void glUniform1dv(GLint, GLsizei, GLdouble const *);
void glUniform2dv(GLint, GLsizei, GLdouble const *);
void glUniform3dv(GLint, GLsizei, GLdouble const *);
void glUniform4dv(GLint, GLsizei, GLdouble const *);
void glUniformMatrix2dv(GLint, GLsizei, GLboolean, GLdouble const *);
void glUniformMatrix3dv(GLint, GLsizei, GLboolean, GLdouble const *);
void glUniformMatrix4dv(GLint, GLsizei, GLboolean, GLdouble const *);
void glUniformMatrix2x3dv(GLint, GLsizei, GLboolean, GLdouble const *);
void glUniformMatrix2x4dv(GLint, GLsizei, GLboolean, GLdouble const *);
void glUniformMatrix3x2dv(GLint, GLsizei, GLboolean, GLdouble const *);
void glUniformMatrix3x4dv(GLint, GLsizei, GLboolean, GLdouble const *);
void glUniformMatrix4x2dv(GLint, GLsizei, GLboolean, GLdouble const *);
void glUniformMatrix4x3dv(GLint, GLsizei, GLboolean, GLdouble const *);
void glGetUniformdv(GLuint, GLint, GLdouble *);
GLint glGetSubroutineUniformLocation(GLuint, GLenum, GLchar const *);
GLuint glGetSubroutineIndex(GLuint, GLenum, GLchar const *);
void glGetActiveSubroutineUniformiv(GLuint, GLenum, GLuint, GLenum, GLint *);
void glGetActiveSubroutineUniformName(GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *);
void glGetActiveSubroutineName(GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *);
void glUniformSubroutinesuiv(GLenum, GLsizei, GLuint const *);
void glGetUniformSubroutineuiv(GLenum, GLint, GLuint *);
void glGetProgramStageiv(GLuint, GLenum, GLenum, GLint *);
void glPatchParameteri(GLenum, GLint);
void glPatchParameterfv(GLenum, GLfloat const *);
void glBindTransformFeedback(GLenum, GLuint);
void glDeleteTransformFeedbacks(GLsizei, GLuint const *);
void glGenTransformFeedbacks(GLsizei, GLuint *);
GLboolean glIsTransformFeedback(GLuint);
void glPauseTransformFeedback(void);
void glResumeTransformFeedback(void);
void glDrawTransformFeedback(GLenum, GLuint);
void glDrawTransformFeedbackStream(GLenum, GLuint, GLuint);
void glBeginQueryIndexed(GLenum, GLuint, GLuint);
void glEndQueryIndexed(GLenum, GLuint);
void glGetQueryIndexediv(GLenum, GLuint, GLenum, GLint *);
void glReleaseShaderCompiler(void);
void glShaderBinary(GLsizei, GLuint const *, GLenum, GLvoid const *, GLsizei);
void glGetShaderPrecisionFormat(GLenum, GLenum, GLint *, GLint *);
void glDepthRangef(GLclampf, GLclampf);
void glClearDepthf(GLclampf);
void glGetProgramBinary(GLuint, GLsizei, GLsizei *, GLenum *, GLvoid *);
void glProgramBinary(GLuint, GLenum, GLvoid const *, GLsizei);
void glProgramParameteri(GLuint, GLenum, GLint);
void glUseProgramStages(GLuint, GLbitfield, GLuint);
void glActiveShaderProgram(GLuint, GLuint);
GLuint glCreateShaderProgramv(GLenum, GLsizei, GLchar const * *);
void glBindProgramPipeline(GLuint);
void glDeleteProgramPipelines(GLsizei, GLuint const *);
void glGenProgramPipelines(GLsizei, GLuint *);
GLboolean glIsProgramPipeline(GLuint);
void glGetProgramPipelineiv(GLuint, GLenum, GLint *);
void glProgramUniform1i(GLuint, GLint, GLint);
void glProgramUniform1iv(GLuint, GLint, GLsizei, GLint const *);
void glProgramUniform1f(GLuint, GLint, GLfloat);
void glProgramUniform1fv(GLuint, GLint, GLsizei, GLfloat const *);
void glProgramUniform1d(GLuint, GLint, GLdouble);
void glProgramUniform1dv(GLuint, GLint, GLsizei, GLdouble const *);
void glProgramUniform1ui(GLuint, GLint, GLuint);
void glProgramUniform1uiv(GLuint, GLint, GLsizei, GLuint const *);
void glProgramUniform2i(GLuint, GLint, GLint, GLint);
void glProgramUniform2iv(GLuint, GLint, GLsizei, GLint const *);
void glProgramUniform2f(GLuint, GLint, GLfloat, GLfloat);
void glProgramUniform2fv(GLuint, GLint, GLsizei, GLfloat const *);
void glProgramUniform2d(GLuint, GLint, GLdouble, GLdouble);
void glProgramUniform2dv(GLuint, GLint, GLsizei, GLdouble const *);
void glProgramUniform2ui(GLuint, GLint, GLuint, GLuint);
void glProgramUniform2uiv(GLuint, GLint, GLsizei, GLuint const *);
void glProgramUniform3i(GLuint, GLint, GLint, GLint, GLint);
void glProgramUniform3iv(GLuint, GLint, GLsizei, GLint const *);
void glProgramUniform3f(GLuint, GLint, GLfloat, GLfloat, GLfloat);
void glProgramUniform3fv(GLuint, GLint, GLsizei, GLfloat const *);
void glProgramUniform3d(GLuint, GLint, GLdouble, GLdouble, GLdouble);
void glProgramUniform3dv(GLuint, GLint, GLsizei, GLdouble const *);
void glProgramUniform3ui(GLuint, GLint, GLuint, GLuint, GLuint);
void glProgramUniform3uiv(GLuint, GLint, GLsizei, GLuint const *);
void glProgramUniform4i(GLuint, GLint, GLint, GLint, GLint, GLint);
void glProgramUniform4iv(GLuint, GLint, GLsizei, GLint const *);
void glProgramUniform4f(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat);
void glProgramUniform4fv(GLuint, GLint, GLsizei, GLfloat const *);
void glProgramUniform4d(GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble);
void glProgramUniform4dv(GLuint, GLint, GLsizei, GLdouble const *);
void glProgramUniform4ui(GLuint, GLint, GLuint, GLuint, GLuint, GLuint);
void glProgramUniform4uiv(GLuint, GLint, GLsizei, GLuint const *);
void glProgramUniformMatrix2fv(GLuint, GLint, GLsizei, GLboolean, GLfloat const *);
void glProgramUniformMatrix3fv(GLuint, GLint, GLsizei, GLboolean, GLfloat const *);
void glProgramUniformMatrix4fv(GLuint, GLint, GLsizei, GLboolean, GLfloat const *);
void glProgramUniformMatrix2dv(GLuint, GLint, GLsizei, GLboolean, GLdouble const *);
void glProgramUniformMatrix3dv(GLuint, GLint, GLsizei, GLboolean, GLdouble const *);
void glProgramUniformMatrix4dv(GLuint, GLint, GLsizei, GLboolean, GLdouble const *);
void glProgramUniformMatrix2x3fv(GLuint, GLint, GLsizei, GLboolean, GLfloat const *);
void glProgramUniformMatrix3x2fv(GLuint, GLint, GLsizei, GLboolean, GLfloat const *);
void glProgramUniformMatrix2x4fv(GLuint, GLint, GLsizei, GLboolean, GLfloat const *);
void glProgramUniformMatrix4x2fv(GLuint, GLint, GLsizei, GLboolean, GLfloat const *);
void glProgramUniformMatrix3x4fv(GLuint, GLint, GLsizei, GLboolean, GLfloat const *);
void glProgramUniformMatrix4x3fv(GLuint, GLint, GLsizei, GLboolean, GLfloat const *);
void glProgramUniformMatrix2x3dv(GLuint, GLint, GLsizei, GLboolean, GLdouble const *);
void glProgramUniformMatrix3x2dv(GLuint, GLint, GLsizei, GLboolean, GLdouble const *);
void glProgramUniformMatrix2x4dv(GLuint, GLint, GLsizei, GLboolean, GLdouble const *);
void glProgramUniformMatrix4x2dv(GLuint, GLint, GLsizei, GLboolean, GLdouble const *);
void glProgramUniformMatrix3x4dv(GLuint, GLint, GLsizei, GLboolean, GLdouble const *);
void glProgramUniformMatrix4x3dv(GLuint, GLint, GLsizei, GLboolean, GLdouble const *);
void glValidateProgramPipeline(GLuint);
void glGetProgramPipelineInfoLog(GLuint, GLsizei, GLsizei *, GLchar *);
void glVertexAttribL1d(GLuint, GLdouble);
void glVertexAttribL2d(GLuint, GLdouble, GLdouble);
void glVertexAttribL3d(GLuint, GLdouble, GLdouble, GLdouble);
void glVertexAttribL4d(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
void glVertexAttribL1dv(GLuint, GLdouble const *);
void glVertexAttribL2dv(GLuint, GLdouble const *);
void glVertexAttribL3dv(GLuint, GLdouble const *);
void glVertexAttribL4dv(GLuint, GLdouble const *);
void glVertexAttribLPointer(GLuint, GLint, GLenum, GLsizei, GLvoid const *);
void glGetVertexAttribLdv(GLuint, GLenum, GLdouble *);
void glViewportArrayv(GLuint, GLsizei, GLfloat const *);
void glViewportIndexedf(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
void glViewportIndexedfv(GLuint, GLfloat const *);
void glScissorArrayv(GLuint, GLsizei, GLint const *);
void glScissorIndexed(GLuint, GLint, GLint, GLsizei, GLsizei);
void glScissorIndexedv(GLuint, GLint const *);
void glDepthRangeArrayv(GLuint, GLsizei, GLclampd const *);
void glDepthRangeIndexed(GLuint, GLclampd, GLclampd);
void glGetFloati_v(GLenum, GLuint, GLfloat *);
void glGetDoublei_v(GLenum, GLuint, GLdouble *);
GLsync glCreateSyncFromCLeventARB(struct _cl_context * context, struct _cl_event * event, GLbitfield);
void glDebugMessageControlARB(GLenum, GLenum, GLenum, GLsizei, GLuint const *, GLboolean);
void glDebugMessageInsertARB(GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar const *);
void glDebugMessageCallbackARB(GLDEBUGPROCARB callback, GLvoid const *);
GLuint glGetDebugMessageLogARB(GLuint, GLsizei, GLenum *, GLenum *, GLuint *, GLenum *, GLsizei *, GLchar *);
GLenum glGetGraphicsResetStatusARB(void);
void glGetnMapdvARB(GLenum, GLenum, GLsizei, GLdouble *);
void glGetnMapfvARB(GLenum, GLenum, GLsizei, GLfloat *);
void glGetnMapivARB(GLenum, GLenum, GLsizei, GLint *);
void glGetnPixelMapfvARB(GLenum, GLsizei, GLfloat *);
void glGetnPixelMapuivARB(GLenum, GLsizei, GLuint *);
void glGetnPixelMapusvARB(GLenum, GLsizei, GLushort *);
void glGetnPolygonStippleARB(GLsizei, GLubyte *);
void glGetnColorTableARB(GLenum, GLenum, GLenum, GLsizei, GLvoid *);
void glGetnConvolutionFilterARB(GLenum, GLenum, GLenum, GLsizei, GLvoid *);
void glGetnSeparableFilterARB(GLenum, GLenum, GLenum, GLsizei, GLvoid *, GLsizei, GLvoid *, GLvoid *);
void glGetnHistogramARB(GLenum, GLboolean, GLenum, GLenum, GLsizei, GLvoid *);
void glGetnMinmaxARB(GLenum, GLboolean, GLenum, GLenum, GLsizei, GLvoid *);
void glGetnTexImageARB(GLenum, GLint, GLenum, GLenum, GLsizei, GLvoid *);
void glReadnPixelsARB(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, GLvoid *);
void glGetnCompressedTexImageARB(GLenum, GLint, GLsizei, GLvoid *);
void glGetnUniformfvARB(GLuint, GLint, GLsizei, GLfloat *);
void glGetnUniformivARB(GLuint, GLint, GLsizei, GLint *);
void glGetnUniformuivARB(GLuint, GLint, GLsizei, GLuint *);
void glGetnUniformdvARB(GLuint, GLint, GLsizei, GLdouble *);
void glDrawArraysInstancedBaseInstance(GLenum, GLint, GLsizei, GLsizei, GLuint);
void glDrawElementsInstancedBaseInstance(GLenum, GLsizei, GLenum, const void *, GLsizei, GLuint);
void glDrawElementsInstancedBaseVertexBaseInstance(GLenum, GLsizei, GLenum, const void *, GLsizei, GLint, GLuint);
void glDrawTransformFeedbackInstanced(GLenum, GLuint, GLsizei);
void glDrawTransformFeedbackStreamInstanced(GLenum, GLuint, GLuint, GLsizei);
void glGetInternalformativ(GLenum, GLenum, GLenum, GLsizei, GLint *);
void glGetActiveAtomicCounterBufferiv(GLuint, GLuint, GLenum, GLint *);
void glBindImageTexture(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum);
void glMemoryBarrier(GLbitfield);
void glTexStorage1D(GLenum, GLsizei, GLenum, GLsizei);
void glTexStorage2D(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
void glTexStorage3D(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei);
void glTextureStorage1DEXT(GLuint, GLenum, GLsizei, GLenum, GLsizei);
void glTextureStorage2DEXT(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei);
void glTextureStorage3DEXT(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei);

}
}
}

using namespace Twil::Gl::Procs;
